<?xml version="1.0" encoding="utf-8" ?>
<ContentPage xmlns="http://xamarin.com/schemas/2014/forms"
             xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
             xmlns:prism="clr-namespace:Prism.Mvvm;assembly=Prism.Forms"
             xmlns:extended="clr-namespace:Xamarin.Forms.Extended;assembly=Xamarin.Forms.Extended.InfiniteScrolling"
             xmlns:i18n="clr-namespace:SmeData.Mobile.Helpers;assembly=SmeData.Mobile" 
             prism:ViewModelLocator.AutowireViewModel="True"
             x:Class="SmeData.Mobile.Views.SearchPage" 
             x:Name="searchPage"
             xmlns:customControls="clr-namespace:SmeData.Mobile.CustomControls"
             xmlns:converters="clr-namespace:SmeData.Mobile.Converters"
             ControlTemplate="{StaticResource MainPageTemplate}"
             Title="{Binding [Search], Source={x:Static i18n:Translator.Instance}}"
             AutomationId="attlSearch">
    <ContentPage.ToolbarItems>
        <ToolbarItem Command="{Binding Path=BindingContext.HomePageCommand, Source={x:Reference searchPage}}" 
                     Icon="home.png"
                     AutomationProperties.IsInAccessibleTree="True"
                     AutomationProperties.Name="{Binding [HomeButton], Source={x:Static i18n:Translator.Instance}}"/>
    </ContentPage.ToolbarItems>
    <ContentPage.Resources>
        <ResourceDictionary>
            <converters:DocTypeToImageSourceConverter x:Key="DocTypeToImageSourceConverter" />
            <converters:SizeConverter x:Key="SizeConverter" />
            <converters:StringToBoolenConverter x:Key="StringToBoolenConverter" />
        </ResourceDictionary>
    </ContentPage.Resources>
    <ContentPage.Content>
        <StackLayout>
            <Label Text="{Binding [SearchInDocuments], Source={x:Static i18n:Translator.Instance}}"
                   FontSize="{Binding SubTitleFont, Converter={StaticResource SizeConverter}}"
                   TextColor="DarkSlateGray"
                   HorizontalOptions="Center"
                   AutomationProperties.IsInAccessibleTree="True"/>
            <SearchBar x:Name="search"
                       SearchCommand="{Binding SearchCommand}"
                       SearchCommandParameter="{Binding Text, Source={x:Reference search}}"
                       AutomationId="asbSearch"/>
            <ListView ItemsSource="{Binding EuDocs}"
                      SeparatorVisibility="None"
                      HasUnevenRows="True">
                <ListView.Behaviors>
                    <extended:InfiniteScrollBehavior IsLoadingMore="{Binding IsBusy}" />
                </ListView.Behaviors>
                <ListView.ItemTemplate>
                    <DataTemplate>
                        <ViewCell>
                            <customControls:DocInTabListView LabelTitleText="{Binding Path=ShortTitle}"
                                                             LabelSubTitleText="{Binding Path=SubTitle}"
                                                             IsSubTitleNotNull="{Binding Path=SubTitle, Converter={StaticResource StringToBoolenConverter}}"
                                                             ImageSource="{Binding Path=DocType, Converter={StaticResource DocTypeToImageSourceConverter}}" 
                                                             TabCommand="{Binding Path=BindingContext.TabCommand, Source={x:Reference searchPage}}"
                                                             CommandPar="{Binding .}"
                                                             DefaultFontSize="{Binding BindingContext.DocInTabFont, Converter={StaticResource SizeConverter}, Source={x:Reference searchPage}}"
                                                             AutomationId="alSearchResultEntry"/>
                        </ViewCell>
                    </DataTemplate>
                </ListView.ItemTemplate>
                <ListView.Footer>
                    <Grid Padding="6" 
                          IsVisible="{Binding IsBusy}">
                        <Grid.Triggers>
                            <Trigger TargetType="Grid" 
                                     Property="IsVisible" 
                                     Value="False">
                                <Setter Property="HeightRequest"
                                        Value="0" />
                            </Trigger>
                        </Grid.Triggers>
                        <customControls:LoadingIndicator IsLoading="{Binding IsBusy}"/>
                    </Grid>
                </ListView.Footer>
            </ListView>
            <customControls:LoadingIndicator IsLoading="{Binding IsLoading}"/>
        </StackLayout>
    </ContentPage.Content>
</ContentPage>